<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzy.dao.SGMapper">
  <resultMap id="BaseResultMap" type="com.xzy.model.SG">
    <id column="s_gID" jdbcType="INTEGER" property="sGid" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="seller_ID" jdbcType="INTEGER" property="sellerId" />
    <result column="stuck" jdbcType="INTEGER" property="stuck" />
    <result column="success" jdbcType="INTEGER" property="success" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    s_gID, goods_id, seller_ID, stuck, success
  </sql>
  <select id="selectByExample" parameterType="com.xzy.model.SGExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzy.model.SGExample">
    delete from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzy.model.SG">
    insert into s_g (s_gID, goods_id, seller_ID, 
      stuck, success)
    values (#{sGid,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{stuck,jdbcType=INTEGER}, #{success,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xzy.model.SG">
    insert into s_g
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        s_gID,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="sellerId != null">
        seller_ID,
      </if>
      <if test="stuck != null">
        stuck,
      </if>
      <if test="success != null">
        success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        #{sGid,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        #{success,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzy.model.SGExample" resultType="java.lang.Long">
    select count(*) from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_g
    <set>
      <if test="record.sGid != null">
        s_gID = #{record.sGid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_ID = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.stuck != null">
        stuck = #{record.stuck,jdbcType=INTEGER},
      </if>
      <if test="record.success != null">
        success = #{record.success,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_g
    set s_gID = #{record.sGid,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      seller_ID = #{record.sellerId,jdbcType=INTEGER},
      stuck = #{record.stuck,jdbcType=INTEGER},
      success = #{record.success,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzy.model.SG">
    update s_g
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_ID = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        stuck = #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=INTEGER},
      </if>
    </set>
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzy.model.SG">
    update s_g
    set goods_id = #{goodsId,jdbcType=INTEGER},
      seller_ID = #{sellerId,jdbcType=INTEGER},
      stuck = #{stuck,jdbcType=INTEGER},
      success = #{success,jdbcType=INTEGER}
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.xzy.model.SG">
    <id column="s_gID" jdbcType="INTEGER" property="sGid" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="seller_ID" jdbcType="INTEGER" property="sellerId" />
    <result column="stuck" jdbcType="INTEGER" property="stuck" />
    <result column="success" jdbcType="INTEGER" property="success" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    s_gID, goods_id, seller_ID, stuck, success
  </sql>
  <select id="selectByExample" parameterType="com.xzy.model.SGExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzy.model.SGExample">
    delete from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzy.model.SG">
    insert into s_g (s_gID, goods_id, seller_ID, 
      stuck, success)
    values (#{sGid,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{stuck,jdbcType=INTEGER}, #{success,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xzy.model.SG">
    insert into s_g
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        s_gID,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="sellerId != null">
        seller_ID,
      </if>
      <if test="stuck != null">
        stuck,
      </if>
      <if test="success != null">
        success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        #{sGid,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        #{success,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzy.model.SGExample" resultType="java.lang.Long">
    select count(*) from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_g
    <set>
      <if test="record.sGid != null">
        s_gID = #{record.sGid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_ID = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.stuck != null">
        stuck = #{record.stuck,jdbcType=INTEGER},
      </if>
      <if test="record.success != null">
        success = #{record.success,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_g
    set s_gID = #{record.sGid,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      seller_ID = #{record.sellerId,jdbcType=INTEGER},
      stuck = #{record.stuck,jdbcType=INTEGER},
      success = #{record.success,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzy.model.SG">
    update s_g
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_ID = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        stuck = #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=INTEGER},
      </if>
    </set>
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzy.model.SG">
    update s_g
    set goods_id = #{goodsId,jdbcType=INTEGER},
      seller_ID = #{sellerId,jdbcType=INTEGER},
      stuck = #{stuck,jdbcType=INTEGER},
      success = #{success,jdbcType=INTEGER}
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.xzy.model.SG">
    <id column="s_gID" jdbcType="INTEGER" property="sGid" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="seller_ID" jdbcType="INTEGER" property="sellerId" />
    <result column="stuck" jdbcType="INTEGER" property="stuck" />
    <result column="success" jdbcType="INTEGER" property="success" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    s_gID, goods_id, seller_ID, stuck, success
  </sql>
  <select id="selectByExample" parameterType="com.xzy.model.SGExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from s_g
    where s_gID = #{sGid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xzy.model.SGExample">
    delete from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xzy.model.SG">
    insert into s_g (s_gID, goods_id, seller_ID, 
      stuck, success)
    values (#{sGid,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{stuck,jdbcType=INTEGER}, #{success,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xzy.model.SG">
    insert into s_g
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        s_gID,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="sellerId != null">
        seller_ID,
      </if>
      <if test="stuck != null">
        stuck,
      </if>
      <if test="success != null">
        success,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sGid != null">
        #{sGid,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        #{success,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xzy.model.SGExample" resultType="java.lang.Long">
    select count(*) from s_g
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update s_g
    <set>
      <if test="record.sGid != null">
        s_gID = #{record.sGid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_ID = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.stuck != null">
        stuck = #{record.stuck,jdbcType=INTEGER},
      </if>
      <if test="record.success != null">
        success = #{record.success,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update s_g
    set s_gID = #{record.sGid,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      seller_ID = #{record.sellerId,jdbcType=INTEGER},
      stuck = #{record.stuck,jdbcType=INTEGER},
      success = #{record.success,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xzy.model.SG">
    update s_g
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_ID = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="stuck != null">
        stuck = #{stuck,jdbcType=INTEGER},
      </if>
      <if test="success != null">
        success = #{success,jdbcType=INTEGER},
      </if>
    </set>
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xzy.model.SG">
    update s_g
    set goods_id = #{goodsId,jdbcType=INTEGER},
      seller_ID = #{sellerId,jdbcType=INTEGER},
      stuck = #{stuck,jdbcType=INTEGER},
      success = #{success,jdbcType=INTEGER}
    where s_gID = #{sGid,jdbcType=INTEGER}
  </update>
</mapper>